name: Release

on:
  workflow_dispatch:

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Fetch all tags
        run: git fetch --tags --unshallow
      - name: Update Creek dependencies
        run: |
          nextRelease=$( ./gradlew currentVersion -q -Prelease.quiet | sed  's:\(.*\)\(-SNAPSHOT\):\1:' )
          echo "Setting Creek dependencies to v$nextRelease"
          find . -type f -name "build.gradle.kts" -print0 \
            | xargs -0 sed -i 's/\"creekVersion\"[[:blank:]]*,[[:blank:]]*\"[^"]*\"/\"creekVersion\", \"'$nextRelease'\"/'
          git diff
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew check verifyRelease
      - name: Push changes
        run: |
          git config --global user.name 'CreekBot'
          git config --global user.email 'creekbot@users.noreply.github.com'
          git commit -am "Pre-release: Update Creek dependencies"
          git push

  release:
    needs: pre-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Fetch all tags
        run: git fetch --tags --unshallow
      - name: Release
        run: |
          ./gradlew release \
            -Prelease.customUsername=${{ github.actor }} \
            -Prelease.customPassword=${{ github.token }}
      - name: Set next version
        if: github.event.inputs.part != 'Patch'
        run: ./gradlew markNextVersion -Prelease.incrementer=increment${{ github.event.inputs.part }}
      - name: Trigger build of next version
        if: github.event.inputs.part != 'Patch'
        run: |
          curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: token ${GITHUB_TOKEN}" "https://api.github.com/repos/${{ github.repository }}/actions/workflows/gradle.yml/dispatches" -d '{"ref":"main","inputs":{"publish":"true"}}'
        env:
          GITHUB_TOKEN: ${{ secrets.TRIGGER_GITHUB_TOKEN }}
